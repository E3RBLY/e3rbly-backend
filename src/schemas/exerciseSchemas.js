const { z } = require("zod");

// --- Schemas for generateGrammarExercises --- 

const ExerciseSchema = z.object({
    id: z.string().uuid().describe("Unique identifier for the exercise"), // Expect UUID generated by backend
    text: z.string().describe("The Arabic text for the exercise"),
    question: z.string().describe("The question or instructions for the exercise"),
    type: z.enum(["parsing", "fill-in-blanks", "error-correction", "multiple-choice"]).describe("Type of exercise"),
    options: z.array(z.string()).optional().nullable().describe("Options for multiple-choice questions"), // Allow null from AI
    hint: z.string().optional().nullable().describe("A hint for the exercise"), // Allow null from AI
    // Correct answer and explanation might be sensitive, consider if they should always be returned
    correctAnswer: z.string().describe("The correct answer or solution"),
    explanation: z.string().describe("Detailed explanation of the correct answer"),
});

const GenerateGrammarExercisesOutputSchema = z.object({
  exercises: z.array(ExerciseSchema),
});

// --- Schemas for checkExerciseAnswer --- 

const CheckExerciseAnswerOutputSchema = z.object({
  isCorrect: z.boolean().describe("Whether the answer is correct"),
  score: z.number().min(0).max(100).describe("Score as a percentage"),
  feedback: z.string().describe("Detailed feedback on the answer"),
  correctAnswer: z.string().describe("The correct answer for reference"),
  explanation: z.string().describe("Explanation of the grammar rules applied"),
});

module.exports = {
    GenerateGrammarExercisesOutputSchema,
    CheckExerciseAnswerOutputSchema,
    ExerciseSchema // Exporting for potential reuse
};

